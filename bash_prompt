#!/usr/bin/env bash
# Utility functions
#########################

set_virtualenv() {
   if test -z "$VIRTUAL_ENV" ; then
       PYTHON_VIRTUALENV=''
   else
       PYTHON_VIRTUALENV="(`basename \"$VIRTUAL_ENV\"`) "
   fi
}

set_nix_shell() {
   if test -z "$IN_NIX_SHELL" ; then
       NIX_SHELL=''
   else
       NIX_SHELL='[nix-shell] '
   fi
}

set_shell_indicator() {
   if test `id -u` -eq 0 ; then
       SHELL_SIGN="\[$red\]\$\[$reset\]"
   else
       SHELL_SIGN="\[$dim\]\[$bold\]\[$blue\]Î»\[$reset\]"
   fi
}

set_remote_indicator()
{
    REMOTE=''

    if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
      REMOTE='\u@\h '
    else
      case $(ps -o comm= -p $PPID) in
        sshd|*/sshd) REMOTE='\u@\h ';;
      esac
    fi
}

# Colors and appearance
#########################

reset=$(tput sgr0)
bold=$(tput bold)
blue=$(tput setaf 33)
green=$(tput setaf 64);
red=$(tput setaf 153);
dim=$(tput dim)
grey=$(tput setaf 10);

#########################

GIT_PS1_SHOWDIRTYSTATE=1

set_bash_prompt() {
    set_virtualenv
    set_nix_shell
    set_shell_indicator
    set_remote_indicator

    remote="\[$grey\]$REMOTE\[$reset\]"
    git_info="\[$green\]\$(__git_ps1)\[$reset\]"
    venv="\[$green\]\$PYTHON_VIRTUALENV\[$reset\]"
    cwd="\w"
    nix="\[$green\]\$NIX_SHELL\[$reset\]"

    PS1="${remote}${venv}${nix}${cwd}${git_info} ${SHELL_SIGN} "
}

PROMPT_COMMAND=set_bash_prompt
