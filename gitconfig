# vim: set syntax=gitconfig:
[include]
    # user configuration
    path = ~/.gitid

;[includeIf "gitdir:/home/allgreed/Work/"]
    ;# work configuration
    ;path = ~/.gitwork

[core]
    pager = less

    excludesfile = ~/.gitignore_global
    attributesfile = ~/.gitattributes_global

    autocrlf = input
    safecrlf = true

    untrackedCache = true

[fetch]
    prune = true
    fsckobjects = true
[transfer]
    fsckobjects = true
[receive]
    fsckObjects = true

# TODO: if I have 2 same blocks, like if I split push into 2 -> will they be merged or would last win?
[push]
    default = simple
    followTags = false
    recurseSubmodules = check
    autoSetupRemote = true
[pull]
    ff = only

[merge]
    conflictstyle = zdiff3

[rebase]
    autosquash = true
    missingCommitsCheck = error

[commit]
    verbose = true # -v

[rerere]
    enabled = true

# yes, it's a statement
[init]
    defaultBranch = master

[safe]
    # since I rarely use bare repos on my terminal machines
    # this mitigates an obscure attack vector 
    # https://github.com/jwilk/git-landmine
    bareRepository = explicit
    # it's owned by root but I want the git indicator in the promt to work properly anyway
	directory = /etc/nixos

# huh?
[advice]
    addIgnoredFile = false
    addEmptyPathspec = false

# 3rd party
############################
[hub]
    protocol = ssh
[url "git@github.com:"]
    pushInsteadOf = https://github.com/

# Diffs
############################
[diff]
    renames = copies
    algorithm = histogram
    colormoved = "default"
    colormovedws = "allow-indentation-change"

[diff "bin"]
    textconv = hexdump -v -C

[difftool]
    prompt = false

[difftool "nvimdiff"]
    cmd = nvim -d $LOCAL $REMOTE

# UI
############################
[branch]
    sort = -committerdate

[sort]
    sort = taggerdate

[log]
    date = human

[alias]
    a = add
    c = commit
    d = diff
    dw = diff --word-diff
    p = push
    s = status --short

    aa = a --all
    call = "!f() { git diff-index --quiet --cached HEAD -- && git aa && git c $@ || echo 'Aborting! Index dirty or something went wrong'; }; f"
    co = checkout
    dc = d --cached
    dcw = dw --cached
    dwc = dcw
    cam = !git call -C HEAD --amend

    pforce = push --force-with-lease
    cof = !git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git co
    purge-branches = !git-purge-branches


    crypt = !git-crypt
    serve = daemon --reuseaddr --base-path=. --export-all --verbose
[color "status"]
    added = green 
    changed = blue
    untracked = red

[color "diff"]
    meta = yellow bold
    frag = magenta bold # line info
    old = red
    new = green

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = cyan

# Filters
############################
[filter "kicad_project"]
    clean = sed -E 's/^update=.*$/update=Date/'
    smudge = cat

[filter "kicad_sch"]
    clean = "sed -E 's/#(PWR|FLG)[0-9]+/#\\1?/'"
    smudge = cat

[filter "workrave_config"]
    clean = "~/.scripts/filter-workrave-git clean"
    smudge = "~/.scripts/filter-workrave-git smudge"

[filter "taskwarrior_ignore_set_context"]
    clean = grep -v '^context='
    smudge = cat
